server:
  port: 5000

spring:
  profiles:
    active: local
  devtools:
    livereload:
      enabled: true
  jpa:
    hibernate:
      ddl-auto: none  # create, create-drop, validate, update, none
    database: postgresql
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    properties:
      hibernate:
        format_sql: true
        default_schema: playground
    generate-ddl: false # DDL 생성 시 데이터베이스 고유의 기능을 사용하는지에 대한 유무
    open-in-view: false

  # H2 ===================================================================================================================
  h2:
    console:
      enabled: true
# DB(Custom) ===========================================================================================================
  db:
    datasource:
      # h2는 in-memory로 사용하기 때문에 외부에서 접근이 불가능하여 다른 yml파일을 따로 생성 안하고 그냥 표시
      h2:
        url: jdbc:h2:mem:playground;INIT=CREATE SCHEMA IF NOT EXISTS PLAYGROUND;
        driver-class-name: org.h2.Driver
        username: sa
        password:
      # 보안을 위해 username과 password는 다른 application-xxx.yml 생성 후 입력(git에 올리지 않음)
      postgres:
        url: jdbc:postgresql://localhost:5432/playground
        driver-class-name: org.postgresql.Driver
# Swagger ==============================================================================================================
springdoc:
  api-docs:
    # Api docs 커스텀 경로
    path: /api-docs
  swagger-ui:
    # swagger-ui 커스텀 경로
    path: /swagger
    # tag 정렬 기준 (alpha: 알파벳 오름차순)
    tags-sorter: alpha
    # 컨트롤러 내에서 정의한 api 메서드 순서 (method: http method 순서)
    operations-sorter: method
    # swagger-ui default url인 petstore html 문서 비활성화 여부
    # ※ v1.4.1 이상 버전부터 지원
    disable-swagger-default-url: true
    # json화 된 config파일 대신 파라미터를 이용하여 swagger-ui에 접근
    # api-docs(/api-docs) 및 swagger-ui.configUrl(/api-docs/swagger-config)를 두번씩 호출하는 것을 방지
    # v1.4.1 이상 버전부터 지원
    display-query-params-without-oauth2: true